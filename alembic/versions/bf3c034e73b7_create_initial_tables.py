"""Create initial tables

Revision ID: bf3c034e73b7
Revises: 
Create Date: 2025-06-04 21:14:51.863045

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf3c034e73b7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('market_data_cache_option_chain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('expiration_date', sa.DateTime(), nullable=False),
    sa.Column('strike_price', sa.Float(), nullable=False),
    sa.Column('option_type', sa.String(), nullable=False),
    sa.Column('bid', sa.Float(), nullable=True),
    sa.Column('ask', sa.Float(), nullable=True),
    sa.Column('implied_volatility', sa.Float(), nullable=True),
    sa.Column('delta', sa.Float(), nullable=True),
    sa.Column('gamma', sa.Float(), nullable=True),
    sa.Column('theta', sa.Float(), nullable=True),
    sa.Column('vega', sa.Float(), nullable=True),
    sa.Column('open_interest', sa.Integer(), nullable=True),
    sa.Column('volume', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_symbol_expiration', 'market_data_cache_option_chain', ['symbol', 'expiration_date'], unique=False)
    op.create_index(op.f('ix_market_data_cache_option_chain_id'), 'market_data_cache_option_chain', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('hashed_password', sa.String(length=100), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('brokerage_connections',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('broker_name', sa.String(length=50), nullable=False),
    sa.Column('api_key', sa.LargeBinary(), nullable=False),
    sa.Column('api_secret', sa.LargeBinary(), nullable=True),
    sa.Column('access_token', sa.LargeBinary(), nullable=True),
    sa.Column('refresh_token', sa.LargeBinary(), nullable=True),
    sa.Column('connection_status', sa.String(length=20), nullable=False),
    sa.Column('last_connected', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessions',
    sa.Column('session_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=512), nullable=False),
    sa.Column('refresh_token', sa.String(length=512), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('logged_out_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_table('bot_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('brokerage_connection_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('last_run', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['brokerage_connection_id'], ['brokerage_connections.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bot_instances_id'), 'bot_instances', ['id'], unique=False)
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_instance_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('average_cost', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('opened_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bot_instance_id'], ['bot_instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_table('strategy_definitions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_instance_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('strategy_type', sa.String(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bot_instance_id'], ['bot_instances.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strategy_definitions_id'), 'strategy_definitions', ['id'], unique=False)
    op.create_table('trade_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_instance_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('order_type', sa.String(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('executed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['bot_instance_id'], ['bot_instances.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trade_orders_id'), 'trade_orders', ['id'], unique=False)
    op.create_table('strategy_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('strategy_definition_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_definition_id'], ['strategy_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_strategy_parameters_id'), 'strategy_parameters', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_strategy_parameters_id'), table_name='strategy_parameters')
    op.drop_table('strategy_parameters')
    op.drop_index(op.f('ix_trade_orders_id'), table_name='trade_orders')
    op.drop_table('trade_orders')
    op.drop_index(op.f('ix_strategy_definitions_id'), table_name='strategy_definitions')
    op.drop_table('strategy_definitions')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_bot_instances_id'), table_name='bot_instances')
    op.drop_table('bot_instances')
    op.drop_table('sessions')
    op.drop_table('brokerage_connections')
    op.drop_table('users')
    op.drop_index(op.f('ix_market_data_cache_option_chain_id'), table_name='market_data_cache_option_chain')
    op.drop_index('idx_symbol_expiration', table_name='market_data_cache_option_chain')
    op.drop_table('market_data_cache_option_chain')
    # ### end Alembic commands ###
